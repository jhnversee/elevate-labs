# STEP 1: Import libraries
import kagglehub
import os
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Plotting setup
sns.set(style="whitegrid")
plt.rcParams["figure.figsize"] = (10, 6)

# STEP 2: Download Titanic dataset
path = kagglehub.dataset_download("yasserh/titanic-dataset")
print("Path to dataset files:", path)

# STEP 3: Detect file
files = os.listdir(path)
print("Files in the dataset folder:", files)

# Auto-load the first CSV file found
csv_files = [f for f in files if f.endswith(".csv")]
if not csv_files:
    raise FileNotFoundError("No CSV file found in the downloaded dataset.")
file_path = os.path.join(path, csv_files[0])
print("Using file:", file_path)

# STEP 4: Load dataset
df = pd.read_csv(file_path)
print("\nFirst 5 rows of dataset:")
print(df.head())

# STEP 5: Dataset info and statistics
print("\nDataset Info:")
print(df.info())

print("\nSummary Statistics:")
print(df.describe(include='all'))

print("\nMissing Values:")
print(df.isnull().sum())

# STEP 6: Histograms for numeric columns
df.select_dtypes(include=np.number).hist(bins=30, figsize=(12, 10), color='skyblue')
plt.tight_layout()
plt.show()

# STEP 7: Boxplots for numeric columns
numeric_cols = df.select_dtypes(include=np.number).columns
for col in numeric_cols:
    plt.figure()
    sns.boxplot(x=df[col], color='orange')
    plt.title(f'Boxplot of {col}')
    plt.show()

# STEP 8: Correlation matrix
corr = df.corr(numeric_only=True)
sns.heatmap(corr, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Matrix")
plt.show()

# STEP 9: Pairplot for selected features (if present)
selected_cols = [col for col in ['Age', 'Fare', 'Pclass', 'Survived'] if col in df.columns]
if len(selected_cols) >= 2:
    sns.pairplot(df[selected_cols].dropna(), hue='Survived' if 'Survived' in df.columns else None)
    plt.suptitle("Pairplot of Selected Features", y=1.02)
    plt.show()

# STEP 10: Visual insights by categories
if 'Survived' in df.columns and 'Sex' in df.columns:
    sns.countplot(data=df, x='Survived', hue='Sex', palette='Set2')
    plt.title("Survival Count by Gender")
    plt.show()

if 'Age' in df.columns:
    sns.histplot(df['Age'].dropna(), kde=True, bins=30, color='teal')
    plt.title("Age Distribution")
    plt.xlabel("Age")
    plt.show()

if 'Fare' in df.columns and 'Survived' in df.columns:
    sns.boxplot(x='Survived', y='Fare', data=df, palette='Pastel1')
    plt.title("Fare Paid vs Survival")
    plt.show()

if 'Pclass' in df.columns and 'Survived' in df.columns:
    sns.countplot(x='Pclass', hue='Survived', data=df, palette='Set1')
    plt.title("Pclass vs Survival")
    plt.show()

if 'Embarked' in df.columns and 'Survived' in df.columns:
    sns.countplot(x='Embarked', hue='Survived', data=df, palette='Set3')
    plt.title("Port of Embarkation vs Survival")
    plt.show()

# STEP 11: Skewness of numeric features
print("\nSkewness of Numeric Features:")
print(df[numeric_cols].skew())
